# -*- coding: utf-8 -*-
"""RiskAreas

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QecD3ofvYK1E7dk7coK_6OnWCWERo8N8
"""

!pip install -U gdown

!gdown "1QV5MTItAxjSL-qeZ3dsDrWizSEP2An1J"

!pip install matplotlib==3.2.1

!wget -q http://www.arts.chula.ac.th/ling/wp-content/uploads/TH-Sarabun_Chula1.1.zip -O font.zip
!unzip -qj font.zip TH-Sarabun_Chula1.1/THSarabunChula-Regular.ttf

import matplotlib as mpl
mpl.font_manager.fontManager.addfont('THSarabunChula-Regular.ttf')
mpl.rc('font', family='TH Sarabun Chula')

import pandas as pd
import matplotlib.pyplot as plt
!pip install git+https://github.com/Turbo87/utm.git
import utm
import folium

"""# จังหวัดที่เสี่ยงที่จะเกิดเเผ่นดินถล่ม"""

risk = ('/content/risk.csv')
df1 = pd.read_csv(risk)
df1.groupby(by = 'PROVINCE').LOCATION.describe()
df1.drop_duplicates()
df1.replace(to_replace='', value='ไม่ระบุ', inplace=True)

df1.info()

df1['PROVINCE'] = df1['PROVINCE'].apply(lambda x: 'ไม่มีข้อมูล' if pd.isna(x) or x == '' or str(x).isspace() else x)

q1 = {'จำนวณ':df1.PROVINCE.value_counts()}
print("จังหวัดที่เกิดเเผ่นดินถล่มมากที่สุด : ",df1.PROVINCE.value_counts().idxmax())
print("จังหวัดที่เกิดเเผ่นดินถล่มน้อยที่สุด : ",df1.PROVINCE.value_counts().idxmin())
q = pd.DataFrame(q1)
q

"""จังหวัดที่เกิดเเผ่นดินถล่มมากที่สุด"""

x = df1.PROVINCE.value_counts().idxmax()
df1.loc[df1['PROVINCE'] == x][['UTM_E','UTM_N','ZONE','TYPE','LOCATION','PROVINCE']]

"""จังหวัดที่เกิดเเผ่นดินถล่มน้อยที่สุด"""

x2 = df1.PROVINCE.value_counts().idxmin()
df1.loc[df1['PROVINCE'] == x2][['UTM_E','UTM_N','ZONE','TYPE','LOCATION','PROVINCE']]

"""เปอร์เซ็นต์ที่เกิดขึ้นในจังหวัด (PROVINCE)"""

Px = df1['PROVINCE'].value_counts().values.tolist()
Pxx = df1['PROVINCE'].value_counts().index.tolist()
Py = df1['PROVINCE'].count()
Pz = {'Percentage':(Px/Py*100)}
Pzz = pd.DataFrame(Pz,Pxx)
Pzz

"""กราฟเเสดงจังหวัดเกิดเเผ่นดินถล่ม (PROVINCE)"""

plt.figure(figsize=(18.5, 10.5))
plt.barh(Pxx,Px)
plt.title('กราฟเเสดงจังหวัดเกิดเเผ่นดินถล่ม (PROVINCE)')
plt.ylabel('จังหวัด')
plt.xlabel('จำนวณ')
plt.show()

"""# สถานที่เสี่ยงที่จะเกิดเเผ่นดินถล่ม"""

df1['LOCATION'] = df1['LOCATION'].apply(lambda x: 'ไม่มีข้อมูล' if pd.isna(x) or x == '' or str(x).isspace() else x)

q2 = {'จำนวณ':df1.LOCATION.value_counts()}
print("สถานที่เกิดเเผ่นดินถล่มมากที่สุด : ",df1.LOCATION.value_counts().idxmax())
print("สถานที่เกิดเเผ่นดินถล่มน้อยที่สุด : ",df1.LOCATION.value_counts().idxmin())
qq = pd.DataFrame(q2)
qq

"""สถานที่เกิดเเผ่นดินถล่มมากที่สุด"""

y = df1.LOCATION.value_counts().idxmax()
df1.loc[df1['LOCATION'] == y][['UTM_E','UTM_N','ZONE','TYPE','LOCATION','PROVINCE']]

"""สถานที่เกิดเเผ่นดินถล่มน้อยที่สุด"""

y2 = df1.LOCATION.value_counts().idxmin()
df1.loc[df1['LOCATION'] == y2][['UTM_E','UTM_N','ZONE','TYPE','LOCATION','PROVINCE']]

"""เปอร์เซ็นต์ที่เกิดขึ้นในสถานที่เกิดเเผ่นดินถล่ม (LOCATION)"""

Lx = df1['LOCATION'].value_counts().values.tolist()
Lxx = df1['LOCATION'].value_counts().index.tolist()
Ly = df1['LOCATION'].count()
Lz = {'Percentage':(Lx/Ly*100)}
Lzz = pd.DataFrame(Lz,Lxx)
Lzz

"""กราฟเเสดงสถานที่เกิดเเผ่นดินถล่ม (LOCATION)"""

plt.figure(figsize=(18.5, 10.5))
plt.barh(Lxx,Lx)
plt.title('กราฟเเสดงสถานที่เกิดเเผ่นดินถล่ม (LOCATION)')
plt.ylabel('สถานที่')
plt.xlabel('จำนวณ')
plt.show()

"""สถานที่เเบบไหนที่จะเกิดเเผ่นดินถล่ม"""

q3 = {'จำนวณ':df1.TYPE.value_counts()}
print("สถานที่เเบบไหนที่จะเกิดเเผ่นดินถล่มมากที่สุด : ",df1.TYPE.value_counts().idxmax())
print("สถานที่เเบบไหนที่จะเกิดเกิดเเผ่นดินถล่มน้อยที่สุด : ",df1.TYPE.value_counts().idxmin())
qqq = pd.DataFrame(q3)
qqq

"""เปอร์เซ็นต์ที่เกิดขึ้นในสถานที่เเบบไหน(TYPE) ที่จะเกิดเกิดเเผ่นดินถล่ม"""

Tx = df1['TYPE'].value_counts().values.tolist()
Txx = df1['TYPE'].value_counts().index.tolist()
Ty = df1['TYPE'].count()
Tz = {'Percentage':(Tx/Ty*100)}
Tzz = pd.DataFrame(Tz,Txx)
Tzz

"""กราฟเเสดงสถานที่เเบบไหน(TYPE) ที่เกิดเเผ่นดินถล่ม"""

plt.figure(figsize=(18.5, 10.5))
plt.barh(Txx,Tx)
plt.title('กราฟเเสดงสถานที่เเบบไหน(TYPE)')
plt.ylabel('สถานที่')
plt.xlabel('จำนวณ')
plt.show()

"""# สถานะของสถานที่"""

df1['REMARK'] = df1['REMARK'].apply(lambda x: 'ไม่มีชื่อ' if pd.isna(x) or x == '' or str(x).isspace() else x)

q4 = {'จำนวณ':df1.REMARK.value_counts()}
qqqq = pd.DataFrame(q4)
qqqq

z = input("ใส่สถานะของสถานที่ : ")
df1.loc[df1['REMARK'] == z][['UTM_E','UTM_N','ZONE','TYPE','LOCATION','PROVINCE','REMARK']]

"""# Map เเสดงพื้นที่เสี่ยง"""

x = utm.to_latlon(df1.UTM_E,df1.UTM_N, 47, 'N')
w = pd.DataFrame(x)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
z = pd.DataFrame(a)
z

map=folium.Map(location=[16.439625,102.828728])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map.save("Areas at risk Thai.html")
#map

"""# ตัวอย่างเเผนที่เกิดภัยดินถล่มมากที่สุด 5 อับดับเเรก

# จังหวัด ลำปาง
"""

x = df1.PROVINCE.value_counts().idxmax()
a =df1.loc[df1['PROVINCE'] == x]['UTM_E']
b =df1.loc[df1['PROVINCE'] == x]['UTM_N']
s = utm.to_latlon(a,b,47, 'N')
w = pd.DataFrame(s)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
map=folium.Map(location=[18.234813294398144,99.48918342590332])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map

"""# จังหวัด สระบุรี"""

a =df1.loc[df1['PROVINCE'] == 'สระบุรี']['UTM_E']
b =df1.loc[df1['PROVINCE'] == 'สระบุรี']['UTM_N']
s = utm.to_latlon(a,b,47, 'N')
w = pd.DataFrame(s)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
map=folium.Map(location=[14.52861,100.91139])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map

"""# จังหวัด ชัยภูมิ"""

a =df1.loc[df1['PROVINCE'] == 'ชัยภูมิ']['UTM_E']
b =df1.loc[df1['PROVINCE'] == 'ชัยภูมิ']['UTM_N']
s = utm.to_latlon(a,b,47, 'N')
w = pd.DataFrame(s)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
map=folium.Map(location=[15.80556,102.03111])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map

"""# จังหวัด กาญจนบุรี

"""

a =df1.loc[df1['PROVINCE'] == 'กาญจนบุรี']['UTM_E']
b =df1.loc[df1['PROVINCE'] == 'กาญจนบุรี']['UTM_N']
s = utm.to_latlon(a,b,47, 'N')
w = pd.DataFrame(s)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
map=folium.Map(location=[14.01944,99.53111])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map

"""# จังหวัด เลย"""

a =df1.loc[df1['PROVINCE'] == 'เลย']['UTM_E']
b =df1.loc[df1['PROVINCE'] == 'เลย']['UTM_N']
s = utm.to_latlon(a,b,47, 'N')
w = pd.DataFrame(s)
a = []
b = []
c = []
for i in w:
  a.append(w[i])
  b.append(w[i][0])
  c.append(w[i][1])
map=folium.Map(location=[17.48528,101.73028])
fg = folium.FeatureGroup(name="ThaiLand Map")
city = list(df1["LOCATION"])
lat = list(b)
lon = list(c)
for city,lat,lon in zip(city,lat,lon):
  fg.add_child(folium.Marker(location=[lat,lon],popup=city))
map.add_child(fg)
map